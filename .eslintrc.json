{
    "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:react/recommended",
        "airbnb",
        "airbnb-typescript",
        "plugin:jsx-a11y/recommended",
        "plugin:@next/next/recommended",
        "prettier"
    ],
    "ignorePatterns": ["*.config.js", "polyfills.js"],
    "env": {
        "browser": true,
        "node": true
    },
    "parser": "@typescript-eslint/parser",
    "plugins": ["@typescript-eslint", "import", "jsx-a11y", "react", "react-hooks", "es"],
    "parserOptions": {
        "project": "./tsconfig.json",
        "tsconfigRootDir": "."
    },
    "settings": {
        "import/parsers": {
            "@typescript-eslint/parser": [".ts", ".tsx"]
        },
        "import/order": [
            "error",
            {
                "groups": [
                    "index",
                    "sibling",
                    "parent",
                    "internal",
                    "external",
                    "builtin",
                    "object",
                    "type"
                ]
            }
        ],
        "import/resolver": {
            "typescript": {
                "alwaysTryTypes": true,
                "project": "tsconfig.json"
            }
        }
    },
    "rules": {
        "no-plusplus": "off",
        "import/no-unresolved": "off",
        "react/require-default-props": "off",
        "react/display-name": "off",
        "react/no-unstable-nested-components": "error",
        "react/no-unused-prop-types": "warn",
        "react/function-component-definition": "off",
        "@typescript-eslint/no-unused-vars": "warn",
        "import/order": [
            "warn",
            {
                "groups": [
                    // "type" and "object" commonly unused in code, uses only as divide anchor in "pathGroups"
                    "builtin", // import path from 'path'
                    "external", // import _ from 'lodash'
                    "type", // import type { Foo } from 'foo',
                    "object", // import log = console.log,
                    "internal", // import foo from "src/foo",
                    "parent", // import paerntFoo from "../foo",
                    "sibling", // import {Block} from "./styles",
                    "index"
                ],
                "pathGroups": [
                    // Sorts by record order in array, but "group" and "position" have bigger priority
                    // so keep order consistant with "group" and "position" values
                    { "pattern": "constant/**", "group": "type", "position": "before" },
                    { "pattern": "container/**", "group": "type", "position": "before" },
                    { "pattern": "framework/**", "group": "type", "position": "before" },
                    { "pattern": "domain/entity/**", "group": "type", "position": "before" },
                    { "pattern": "domain/repository/**", "group": "type", "position": "before" },
                    { "pattern": "domain/service/**", "group": "type", "position": "before" },
                    { "pattern": "data/AbstractApi", "group": "type", "position": "after" },
                    { "pattern": "data/AbstractApi/**", "group": "type", "position": "after" },
                    { "pattern": "data/driver/**", "group": "type", "position": "after" },
                    { "pattern": "data/DTO/**", "group": "type", "position": "after" },
                    { "pattern": "data/store/**", "group": "type", "position": "after" },
                    { "pattern": "data/validationSchema/**", "group": "type", "position": "after" },
                    { "pattern": "helper/**", "group": "object", "position": "after" },
                    { "pattern": "util/**", "group": "object", "position": "after" },
                    {
                        "pattern": "presentation/context/**",
                        "group": "internal",
                        "position": "after"
                    },
                    {
                        "pattern": "presentation/controller/**",
                        "group": "internal",
                        "position": "after"
                    },
                    {
                        "pattern": "presentation/type/**",
                        "group": "internal",
                        "position": "after"
                    },
                    {
                        "pattern": "presentation/hook/**",
                        "group": "internal",
                        "position": "after"
                    },
                    {
                        "pattern": "presentation/component/layout/**",
                        "group": "internal",
                        "position": "after"
                    },
                    {
                        "pattern": "presentation/component/common/**",
                        "group": "internal",
                        "position": "after"
                    },
                    {
                        "pattern": "presentation/component/feature/**",
                        "group": "internal",
                        "position": "after"
                    },
                    {
                        "pattern": "presentation/component/page/**",
                        "group": "internal",
                        "position": "after"
                    },
                    {
                        "pattern": "presentation/mediaquery",
                        "group": "sibling",
                        "position": "before"
                    },
                    { "pattern": "./styles", "group": "sibling", "position": "after" }
                ]
            }
        ],
        "import/no-cycle": [
            "warn",
            {
                "maxDepth": 2
            }
        ],
        "no-empty": [
            "error",
            {
                "allowEmptyCatch": true
            }
        ],
        "spaced-comment": "warn",
        "no-unused-vars": "warn",
        "no-underscore-dangle": "off",
        "consistent-return": "off",
        "react/state-in-constructor": ["error", "never"],
        "react/jsx-props-no-spreading": [
            "error",
            {
                "html": "enforce",
                "custom": "ignore",
                "explicitSpread": "enforce",
                "exceptions": []
            }
        ],
        "react/react-in-jsx-scope": "off",
        "react/prop-types": "off",
        "max-classes-per-file": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "react/static-property-placement": "off",
        "newline-before-return": "error",
        "jsx-a11y/anchor-is-valid": [
            "error",
            {
                "components": ["Link"],
                "specialLink": ["hrefLeft", "hrefRight"],
                "aspects": ["invalidHref", "preferButton"]
            }
        ],
        "@typescript-eslint/no-redeclare": "off",
        "arrow-body-style": "off",
        "es/no-logical-assignment-operators": "error",
        "es/no-numeric-separators": "error",
        "es/no-promise-any": "error",
        "es/no-weakrefs": "error"
    }
}
